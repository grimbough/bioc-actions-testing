on:
  workflow_dispatch:
  
name: Workflow that tests the actions

env:
  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

jobs:
  pkg-at-root:
    name: Package at root - Bioc ${{ matrix.bioc-version }} (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2022, macos-11]
        ## Test using both Bioconductor devel and release
        bioc-version: [devel, release]

    runs-on: ${{ matrix.os }}
    
    steps:
    
      - uses: actions/checkout@v2
          
      - name: Setup R and Bioconductor
        uses: grimbough/bioc-actions/setup-bioc@v1
        with:
          bioc-version: ${{ matrix.bioc-version }}
          bioc-mirror: https://ftp.gwdg.de/pub/misc/bioconductor
          
      - name: Set environment variables
        run: |
          ## todays date is use for the cache
          echo "DATE=$(date +%D)" >> $GITHUB_ENV 
        shell: bash
        
      - name: Cache install R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ matrix.os }}-${{ matrix.bioc-version }}-${{ env.DATE }}-1
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.bioc-version }}-
          
      - name: Build, Install, Check
        id: build-install-check
        uses: grimbough/bioc-actions/build-install-check@v1
        with:
          package-directory: '.'
      
      ## Turn off the checks that we know will fail
      ## Cause the workflow to error if any new errors appear
      - name: Run BiocCheck with arguments
        uses: grimbough/bioc-actions/run-BiocCheck@v1
        with:
          package-directory: '.'
          arguments: '--no-check-bioc-views --no-check-vignettes --no-check-bioc-help'
          error-on: 'error'

      ## upload some results files
      - name: Upload check output
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-bioc-${{ matrix.bioc-version}}
          path: |
            ${{ steps.build-install-check.outputs.check-dir }}
            ${{ steps.build-install-check.outputs.source-tarball }}

  pkg-in-subfolder:
    name: Package in subfolder - Bioc ${{ matrix.bioc-version }} (${{ matrix.os }}) 
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        bioc-version: [release]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    
      - uses: actions/checkout@v2
      
      ## We only using Ubuntu and BioC-release here, 
      ## so lets use the Rstudio package manager
      ## to install binary linux packages
      - name: Setup R and Bioconductor
        uses: grimbough/bioc-actions/setup-bioc@v1
        with:
          bioc-version: ${{ matrix.bioc-version }}
          bioc-mirror: https://packagemanager.rstudio.com/bioconductor
          
      - name: Set environment variables
        run: |
          ## todays date is use for the cache
          echo "DATE=$(date +%D)" >> $GITHUB_ENV 
        shell: bash
          
      - name: Cache install R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ matrix.os }}-${{ matrix.bioc-version }}-${{ env.DATE }}-1
          restore-keys: ${{ matrix.os }}-${{ matrix.bioc-version }}-
      
      ## Run the complete build, install, check process like the Bioc Build System
      - name: Build, Install, Check
        id: build-install-check
        uses: grimbough/bioc-actions/build-install-check@v1
        with:
          package-directory: 'inst/nestedPKG'
      
      ## Run all tests in BiocCheck, include those we know fail
      ## Use the 'error-on' to prevent this failing the workflow
      - name: Run BiocCheck without arguments
        uses: grimbough/bioc-actions/run-BiocCheck@v1
        with:
          package-directory: 'inst/nestedPKG'
          error-on: 'never'
          
      ## upload the Rcheck folder if the workflow fails
      - name: Upload output
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ matrix.os }}-bioc-${{ matrix.bioc-version}}-sub_folder
          path: |
            ${{ steps.build-install-check.outputs.check-dir }}

