on:
  workflow_dispatch:
  
name: Testing devel actions

env:
  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

jobs:

  pkg-in-subfolder:
    name: Testing bioc-actions
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-20.04, windows-2022, macos-11]
        os: [ubuntu-20.04]
        bioc-version: [release]

    runs-on: ${{ matrix.os }}
    container: bioconductor/bioconductor_docker:devel

    steps:
    
      - uses: actions/checkout@v3
      
      ##################################################
      ## no need to install R, BiocManager, or Pandoc ##
      ##################################################
      
      ## create a cache for installed package.  We use the bioc version 
      ## and todays date as the key.  A new cache will be created tomorrow
      ## if we install new/different packages
      - name: Cache install R packages
        uses: actions/cache@v3
        with:
          path: /usr/local/lib/R/site-library
          key: docker-1
          restore-keys: docker-
      
      ## we can use AnVIL to install binary packages in the Docker container
      - name: Install dependencies
        run: AnVIL::install(c('AnnotationHub', 'rtracklayer', 'knitr', 'rmarkdown'))
        shell: Rscript {0}
          
      - name: Build, Install, Check
        id: build-install-check
        uses: grimbough/bioc-actions/build-install-check@devel
        with:
          package-directory: '.'
      
      ## Turn off the checks that we know will fail
      ## Cause the workflow to error if any new errors appear
      - name: Run BiocCheck with arguments
        uses: grimbough/bioc-actions/run-BiocCheck@devel
        with:
          package-directory: '.'
          arguments: '--no-check-bioc-views --no-check-vignettes --no-check-bioc-help'
          error-on: 'error'

      ## upload some results files
      - name: Upload check output
        uses: actions/upload-artifact@v3
        with:
          name: docker-results
          path: |
            ${{ steps.build-install-check.outputs.check-dir }}
            ${{ steps.build-install-check.outputs.source-tarball }}
            ${{ steps.build-install-check.outputs.package-binary }}
          

